// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _envelope_HH_
#define _envelope_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "envelope_fadd_32nbkb.h"
#include "envelope_fmul_32ncud.h"
#include "envelope_fdiv_32ndEe.h"
#include "envelope_sitofp_3eOg.h"
#include "envelope_fcmp_32nfYi.h"
#include "envelope_CTRL_BUS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CTRL_BUS_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CTRL_BUS_DATA_WIDTH = 32>
struct envelope : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > wave_in_V_TDATA;
    sc_in< sc_logic > wave_in_V_TVALID;
    sc_out< sc_logic > wave_in_V_TREADY;
    sc_out< sc_lv<32> > wave_out_V_TDATA;
    sc_out< sc_logic > wave_out_V_TVALID;
    sc_in< sc_logic > wave_out_V_TREADY;
    sc_in< sc_logic > s_axi_CTRL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_CTRL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CTRL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_CTRL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH/8> > s_axi_CTRL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CTRL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CTRL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_CTRL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CTRL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CTRL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_CTRL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CTRL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CTRL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CTRL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CTRL_BUS_BRESP;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<5> > ap_var_for_const2;


    // Module declarations
    envelope(sc_module_name name);
    SC_HAS_PROCESS(envelope);

    ~envelope();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    envelope_CTRL_BUS_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>* envelope_CTRL_BUS_s_axi_U;
    envelope_fadd_32nbkb<1,5,32,32,32>* envelope_fadd_32nbkb_U1;
    envelope_fmul_32ncud<1,4,32,32,32>* envelope_fmul_32ncud_U2;
    envelope_fdiv_32ndEe<1,16,32,32,32>* envelope_fdiv_32ndEe_U3;
    envelope_fdiv_32ndEe<1,16,32,32,32>* envelope_fdiv_32ndEe_U4;
    envelope_sitofp_3eOg<1,6,32,32>* envelope_sitofp_3eOg_U5;
    envelope_sitofp_3eOg<1,6,32,32>* envelope_sitofp_3eOg_U6;
    envelope_fcmp_32nfYi<1,1,32,32,1>* envelope_fcmp_32nfYi_U7;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<32> > wave_in_V_0_data_out;
    sc_signal< sc_logic > wave_in_V_0_vld_in;
    sc_signal< sc_logic > wave_in_V_0_vld_out;
    sc_signal< sc_logic > wave_in_V_0_ack_in;
    sc_signal< sc_logic > wave_in_V_0_ack_out;
    sc_signal< sc_lv<32> > wave_in_V_0_payload_A;
    sc_signal< sc_lv<32> > wave_in_V_0_payload_B;
    sc_signal< sc_logic > wave_in_V_0_sel_rd;
    sc_signal< sc_logic > wave_in_V_0_sel_wr;
    sc_signal< sc_logic > wave_in_V_0_sel;
    sc_signal< sc_logic > wave_in_V_0_load_A;
    sc_signal< sc_logic > wave_in_V_0_load_B;
    sc_signal< sc_lv<2> > wave_in_V_0_state;
    sc_signal< sc_logic > wave_in_V_0_state_cmp_full;
    sc_signal< sc_lv<32> > wave_out_V_1_data_out;
    sc_signal< sc_logic > wave_out_V_1_vld_in;
    sc_signal< sc_logic > wave_out_V_1_vld_out;
    sc_signal< sc_logic > wave_out_V_1_ack_in;
    sc_signal< sc_logic > wave_out_V_1_ack_out;
    sc_signal< sc_lv<32> > wave_out_V_1_payload_A;
    sc_signal< sc_lv<32> > wave_out_V_1_payload_B;
    sc_signal< sc_logic > wave_out_V_1_sel_rd;
    sc_signal< sc_logic > wave_out_V_1_sel_wr;
    sc_signal< sc_logic > wave_out_V_1_sel;
    sc_signal< sc_logic > wave_out_V_1_load_A;
    sc_signal< sc_logic > wave_out_V_1_load_B;
    sc_signal< sc_lv<2> > wave_out_V_1_state;
    sc_signal< sc_logic > wave_out_V_1_state_cmp_full;
    sc_signal< sc_lv<32> > press;
    sc_signal< sc_lv<32> > attackDuration;
    sc_signal< sc_lv<32> > decayDuration;
    sc_signal< sc_lv<32> > sustainAmplitude;
    sc_signal< sc_lv<32> > releaseDuration;
    sc_signal< sc_lv<32> > lastpress;
    sc_signal< sc_lv<32> > releaseTime;
    sc_signal< sc_lv<32> > sustainTime;
    sc_signal< sc_lv<32> > releaseSlope;
    sc_signal< sc_lv<1> > wait_r;
    sc_signal< sc_lv<32> > time_r;
    sc_signal< sc_logic > wave_in_V_TDATA_blk_n;
    sc_signal< sc_lv<68> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state46;
    sc_signal< sc_logic > wave_out_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state67;
    sc_signal< sc_logic > ap_CS_fsm_state68;
    sc_signal< sc_lv<32> > grp_fu_173_p1;
    sc_signal< sc_lv<32> > reg_189;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state29;
    sc_signal< sc_logic > ap_CS_fsm_state53;
    sc_signal< sc_lv<1> > tmp_16_reg_748;
    sc_signal< sc_lv<1> > sel_tmp2_reg_778;
    sc_signal< sc_lv<1> > sel_tmp3_reg_789;
    sc_signal< sc_lv<1> > sel_tmp5_reg_795;
    sc_signal< sc_lv<32> > grp_fu_154_p2;
    sc_signal< sc_lv<32> > reg_195;
    sc_signal< sc_logic > ap_CS_fsm_state62;
    sc_signal< sc_lv<32> > grp_fu_160_p2;
    sc_signal< sc_lv<32> > reg_201;
    sc_signal< sc_logic > ap_CS_fsm_state57;
    sc_signal< sc_logic > ap_CS_fsm_state66;
    sc_signal< sc_lv<32> > releaseDuration_read_reg_612;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > sustainAmplitude_rea_reg_621;
    sc_signal< sc_lv<32> > decayDuration_read_reg_629;
    sc_signal< sc_lv<32> > attackDuration_read_reg_636;
    sc_signal< sc_lv<32> > press_read_reg_643;
    sc_signal< sc_lv<32> > tmp_3_fu_207_p2;
    sc_signal< sc_lv<32> > tmp_3_reg_649;
    sc_signal< sc_lv<32> > grp_fu_176_p1;
    sc_signal< sc_lv<32> > tmp_4_reg_654;
    sc_signal< sc_lv<1> > tmp_32_fu_179_p2;
    sc_signal< sc_lv<1> > tmp_32_reg_659;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<32> > grp_fu_164_p2;
    sc_signal< sc_lv<32> > attackSlope_reg_664;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<32> > grp_fu_169_p2;
    sc_signal< sc_lv<32> > decaySlope_reg_669;
    sc_signal< sc_lv<32> > sustainAmplitude_ass_fu_253_p3;
    sc_signal< sc_lv<32> > sustainAmplitude_ass_reg_674;
    sc_signal< sc_lv<1> > tmp_7_fu_270_p2;
    sc_signal< sc_lv<1> > tmp_7_reg_681;
    sc_signal< sc_lv<1> > or_cond_4_fu_275_p2;
    sc_signal< sc_lv<1> > or_cond_4_reg_689;
    sc_signal< sc_lv<32> > tmp_s_fu_289_p2;
    sc_signal< sc_lv<32> > tmp_s_reg_703;
    sc_signal< sc_lv<32> > tmp_9_fu_302_p1;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< sc_lv<32> > grp_fu_184_p2;
    sc_signal< sc_logic > ap_CS_fsm_state45;
    sc_signal< sc_lv<1> > not_tmp_7_fu_318_p2;
    sc_signal< sc_lv<1> > not_tmp_7_reg_718;
    sc_signal< sc_lv<32> > tmp_36_reg_725;
    sc_signal< sc_lv<32> > sustainTime_new_1_tm_fu_399_p3;
    sc_signal< sc_lv<32> > sustainTime_new_1_tm_reg_733;
    sc_signal< sc_lv<32> > time_load_s_fu_407_p3;
    sc_signal< sc_lv<32> > time_load_s_reg_739;
    sc_signal< sc_lv<1> > tmp_16_fu_415_p2;
    sc_signal< sc_lv<1> > tmp_19_fu_432_p2;
    sc_signal< sc_lv<1> > tmp_19_reg_756;
    sc_signal< sc_lv<1> > tmp_25_fu_437_p2;
    sc_signal< sc_lv<1> > tmp_25_reg_762;
    sc_signal< sc_lv<32> > tmp_20_fu_443_p2;
    sc_signal< sc_lv<32> > tmp_20_reg_768;
    sc_signal< sc_logic > ap_CS_fsm_state47;
    sc_signal< sc_lv<32> > tmp_26_fu_451_p2;
    sc_signal< sc_lv<32> > tmp_26_reg_773;
    sc_signal< sc_lv<1> > sel_tmp2_fu_460_p2;
    sc_signal< sc_lv<1> > sel_tmp8_fu_510_p2;
    sc_signal< sc_lv<1> > sel_tmp8_reg_784;
    sc_signal< sc_lv<1> > sel_tmp3_fu_522_p2;
    sc_signal< sc_lv<1> > sel_tmp5_fu_534_p2;
    sc_signal< sc_lv<1> > wait_flag_1_fu_539_p2;
    sc_signal< sc_lv<1> > wait_flag_1_reg_801;
    sc_signal< sc_logic > ap_CS_fsm_state48;
    sc_signal< sc_logic > ap_CS_fsm_state54;
    sc_signal< sc_lv<1> > not_or_cond_fu_573_p2;
    sc_signal< sc_lv<1> > not_or_cond_reg_810;
    sc_signal< sc_lv<32> > resultAmplitude_7_fu_593_p3;
    sc_signal< sc_lv<32> > resultAmplitude_7_reg_815;
    sc_signal< sc_lv<32> > resultAmplitude_fu_600_p3;
    sc_signal< sc_lv<1> > releaseTime_flag_reg_123;
    sc_signal< sc_lv<32> > releaseTime_loc_reg_136;
    sc_signal< sc_lv<32> > sustainTime_loc_reg_145;
    sc_signal< sc_lv<32> > releaseTime_new_1_re_fu_385_p3;
    sc_signal< sc_lv<1> > releaseTime_flag_1_s_fu_379_p2;
    sc_signal< sc_lv<32> > tmp_31_fu_543_p2;
    sc_signal< sc_lv<32> > grp_fu_154_p0;
    sc_signal< sc_lv<32> > grp_fu_154_p1;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state58;
    sc_signal< sc_lv<32> > grp_fu_160_p0;
    sc_signal< sc_lv<32> > grp_fu_160_p1;
    sc_signal< sc_logic > ap_CS_fsm_state63;
    sc_signal< sc_lv<32> > grp_fu_164_p0;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > grp_fu_173_p0;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<32> > sustainAmplitude_to_s_fu_213_p1;
    sc_signal< sc_lv<8> > tmp_5_fu_216_p4;
    sc_signal< sc_lv<23> > tmp_fu_226_p1;
    sc_signal< sc_lv<1> > notrhs_fu_236_p2;
    sc_signal< sc_lv<1> > notlhs_fu_230_p2;
    sc_signal< sc_lv<1> > tmp_30_fu_242_p2;
    sc_signal< sc_lv<1> > tmp_33_fu_248_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_264_p2;
    sc_signal< sc_lv<32> > tmp_9_to_int_fu_293_p1;
    sc_signal< sc_lv<32> > tmp_9_neg_fu_296_p2;
    sc_signal< sc_lv<32> > tmp_13_fu_333_p2;
    sc_signal< sc_lv<32> > tmp_12_fu_327_p2;
    sc_signal< sc_lv<1> > tmp_34_fu_359_p2;
    sc_signal< sc_lv<1> > tmp1_fu_374_p2;
    sc_signal< sc_lv<1> > tmp_14_fu_365_p2;
    sc_signal< sc_lv<32> > releaseTime_new_1_fu_339_p3;
    sc_signal< sc_lv<32> > releaseTime_loc_1_fu_345_p3;
    sc_signal< sc_lv<32> > sustainTime_new_1_fu_352_p3;
    sc_signal< sc_lv<32> > releaseTime_loc_1_re_fu_392_p3;
    sc_signal< sc_lv<1> > not_tmp_s_fu_455_p2;
    sc_signal< sc_lv<1> > tmp_24_fu_447_p2;
    sc_signal< sc_lv<1> > sel_tmp6_demorgan_fu_471_p2;
    sc_signal< sc_lv<1> > tmp_24_not_fu_475_p2;
    sc_signal< sc_lv<1> > sel_tmp13_demorgan_fu_487_p2;
    sc_signal< sc_lv<1> > tmp_25_not_fu_493_p2;
    sc_signal< sc_lv<1> > not_sel_tmp7_fu_481_p2;
    sc_signal< sc_lv<1> > not_sel_tmp_fu_498_p2;
    sc_signal< sc_lv<1> > tmp2_fu_504_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_465_p2;
    sc_signal< sc_lv<1> > sel_tmp1_fu_516_p2;
    sc_signal< sc_lv<1> > sel_tmp4_fu_528_p2;
    sc_signal< sc_lv<1> > or_cond_fu_559_p2;
    sc_signal< sc_lv<1> > or_cond1_fu_563_p2;
    sc_signal< sc_lv<1> > or_cond2_fu_567_p2;
    sc_signal< sc_lv<32> > resultAmplitude_5_fu_579_p3;
    sc_signal< sc_lv<32> > resultAmplitude_6_fu_586_p3;
    sc_signal< sc_lv<68> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<68> ap_ST_fsm_state1;
    static const sc_lv<68> ap_ST_fsm_state2;
    static const sc_lv<68> ap_ST_fsm_state3;
    static const sc_lv<68> ap_ST_fsm_state4;
    static const sc_lv<68> ap_ST_fsm_state5;
    static const sc_lv<68> ap_ST_fsm_state6;
    static const sc_lv<68> ap_ST_fsm_state7;
    static const sc_lv<68> ap_ST_fsm_state8;
    static const sc_lv<68> ap_ST_fsm_state9;
    static const sc_lv<68> ap_ST_fsm_state10;
    static const sc_lv<68> ap_ST_fsm_state11;
    static const sc_lv<68> ap_ST_fsm_state12;
    static const sc_lv<68> ap_ST_fsm_state13;
    static const sc_lv<68> ap_ST_fsm_state14;
    static const sc_lv<68> ap_ST_fsm_state15;
    static const sc_lv<68> ap_ST_fsm_state16;
    static const sc_lv<68> ap_ST_fsm_state17;
    static const sc_lv<68> ap_ST_fsm_state18;
    static const sc_lv<68> ap_ST_fsm_state19;
    static const sc_lv<68> ap_ST_fsm_state20;
    static const sc_lv<68> ap_ST_fsm_state21;
    static const sc_lv<68> ap_ST_fsm_state22;
    static const sc_lv<68> ap_ST_fsm_state23;
    static const sc_lv<68> ap_ST_fsm_state24;
    static const sc_lv<68> ap_ST_fsm_state25;
    static const sc_lv<68> ap_ST_fsm_state26;
    static const sc_lv<68> ap_ST_fsm_state27;
    static const sc_lv<68> ap_ST_fsm_state28;
    static const sc_lv<68> ap_ST_fsm_state29;
    static const sc_lv<68> ap_ST_fsm_state30;
    static const sc_lv<68> ap_ST_fsm_state31;
    static const sc_lv<68> ap_ST_fsm_state32;
    static const sc_lv<68> ap_ST_fsm_state33;
    static const sc_lv<68> ap_ST_fsm_state34;
    static const sc_lv<68> ap_ST_fsm_state35;
    static const sc_lv<68> ap_ST_fsm_state36;
    static const sc_lv<68> ap_ST_fsm_state37;
    static const sc_lv<68> ap_ST_fsm_state38;
    static const sc_lv<68> ap_ST_fsm_state39;
    static const sc_lv<68> ap_ST_fsm_state40;
    static const sc_lv<68> ap_ST_fsm_state41;
    static const sc_lv<68> ap_ST_fsm_state42;
    static const sc_lv<68> ap_ST_fsm_state43;
    static const sc_lv<68> ap_ST_fsm_state44;
    static const sc_lv<68> ap_ST_fsm_state45;
    static const sc_lv<68> ap_ST_fsm_state46;
    static const sc_lv<68> ap_ST_fsm_state47;
    static const sc_lv<68> ap_ST_fsm_state48;
    static const sc_lv<68> ap_ST_fsm_state49;
    static const sc_lv<68> ap_ST_fsm_state50;
    static const sc_lv<68> ap_ST_fsm_state51;
    static const sc_lv<68> ap_ST_fsm_state52;
    static const sc_lv<68> ap_ST_fsm_state53;
    static const sc_lv<68> ap_ST_fsm_state54;
    static const sc_lv<68> ap_ST_fsm_state55;
    static const sc_lv<68> ap_ST_fsm_state56;
    static const sc_lv<68> ap_ST_fsm_state57;
    static const sc_lv<68> ap_ST_fsm_state58;
    static const sc_lv<68> ap_ST_fsm_state59;
    static const sc_lv<68> ap_ST_fsm_state60;
    static const sc_lv<68> ap_ST_fsm_state61;
    static const sc_lv<68> ap_ST_fsm_state62;
    static const sc_lv<68> ap_ST_fsm_state63;
    static const sc_lv<68> ap_ST_fsm_state64;
    static const sc_lv<68> ap_ST_fsm_state65;
    static const sc_lv<68> ap_ST_fsm_state66;
    static const sc_lv<68> ap_ST_fsm_state67;
    static const sc_lv<68> ap_ST_fsm_state68;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2D;
    static const sc_lv<32> ap_const_lv32_42;
    static const sc_lv<32> ap_const_lv32_43;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3D;
    static const sc_lv<32> ap_const_lv32_38;
    static const sc_lv<32> ap_const_lv32_41;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<32> ap_const_lv32_2E;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_35;
    static const sc_lv<32> ap_const_lv32_BF800000;
    static const sc_lv<32> ap_const_lv32_3F800000;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_39;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<32> ap_const_lv32_80000000;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state29();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state45();
    void thread_ap_CS_fsm_state46();
    void thread_ap_CS_fsm_state47();
    void thread_ap_CS_fsm_state48();
    void thread_ap_CS_fsm_state53();
    void thread_ap_CS_fsm_state54();
    void thread_ap_CS_fsm_state57();
    void thread_ap_CS_fsm_state58();
    void thread_ap_CS_fsm_state62();
    void thread_ap_CS_fsm_state63();
    void thread_ap_CS_fsm_state66();
    void thread_ap_CS_fsm_state67();
    void thread_ap_CS_fsm_state68();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_rst_n_inv();
    void thread_grp_fu_154_p0();
    void thread_grp_fu_154_p1();
    void thread_grp_fu_160_p0();
    void thread_grp_fu_160_p1();
    void thread_grp_fu_164_p0();
    void thread_grp_fu_173_p0();
    void thread_grp_fu_184_p2();
    void thread_not_or_cond_fu_573_p2();
    void thread_not_sel_tmp7_fu_481_p2();
    void thread_not_sel_tmp_fu_498_p2();
    void thread_not_tmp_7_fu_318_p2();
    void thread_not_tmp_s_fu_455_p2();
    void thread_notlhs_fu_230_p2();
    void thread_notrhs_fu_236_p2();
    void thread_or_cond1_fu_563_p2();
    void thread_or_cond2_fu_567_p2();
    void thread_or_cond_4_fu_275_p2();
    void thread_or_cond_fu_559_p2();
    void thread_releaseTime_flag_1_s_fu_379_p2();
    void thread_releaseTime_loc_1_fu_345_p3();
    void thread_releaseTime_loc_1_re_fu_392_p3();
    void thread_releaseTime_new_1_fu_339_p3();
    void thread_releaseTime_new_1_re_fu_385_p3();
    void thread_resultAmplitude_5_fu_579_p3();
    void thread_resultAmplitude_6_fu_586_p3();
    void thread_resultAmplitude_7_fu_593_p3();
    void thread_resultAmplitude_fu_600_p3();
    void thread_sel_tmp13_demorgan_fu_487_p2();
    void thread_sel_tmp1_fu_516_p2();
    void thread_sel_tmp2_fu_460_p2();
    void thread_sel_tmp3_fu_522_p2();
    void thread_sel_tmp4_fu_528_p2();
    void thread_sel_tmp5_fu_534_p2();
    void thread_sel_tmp6_demorgan_fu_471_p2();
    void thread_sel_tmp8_fu_510_p2();
    void thread_sel_tmp_fu_465_p2();
    void thread_sustainAmplitude_ass_fu_253_p3();
    void thread_sustainAmplitude_to_s_fu_213_p1();
    void thread_sustainTime_new_1_fu_352_p3();
    void thread_sustainTime_new_1_tm_fu_399_p3();
    void thread_time_load_s_fu_407_p3();
    void thread_tmp1_fu_374_p2();
    void thread_tmp2_fu_504_p2();
    void thread_tmp_12_fu_327_p2();
    void thread_tmp_13_fu_333_p2();
    void thread_tmp_14_fu_365_p2();
    void thread_tmp_16_fu_415_p2();
    void thread_tmp_19_fu_432_p2();
    void thread_tmp_20_fu_443_p2();
    void thread_tmp_24_fu_447_p2();
    void thread_tmp_24_not_fu_475_p2();
    void thread_tmp_25_fu_437_p2();
    void thread_tmp_25_not_fu_493_p2();
    void thread_tmp_26_fu_451_p2();
    void thread_tmp_30_fu_242_p2();
    void thread_tmp_31_fu_543_p2();
    void thread_tmp_33_fu_248_p2();
    void thread_tmp_34_fu_359_p2();
    void thread_tmp_3_fu_207_p2();
    void thread_tmp_5_fu_216_p4();
    void thread_tmp_6_fu_264_p2();
    void thread_tmp_7_fu_270_p2();
    void thread_tmp_9_fu_302_p1();
    void thread_tmp_9_neg_fu_296_p2();
    void thread_tmp_9_to_int_fu_293_p1();
    void thread_tmp_fu_226_p1();
    void thread_tmp_s_fu_289_p2();
    void thread_wait_flag_1_fu_539_p2();
    void thread_wave_in_V_0_ack_in();
    void thread_wave_in_V_0_ack_out();
    void thread_wave_in_V_0_data_out();
    void thread_wave_in_V_0_load_A();
    void thread_wave_in_V_0_load_B();
    void thread_wave_in_V_0_sel();
    void thread_wave_in_V_0_state_cmp_full();
    void thread_wave_in_V_0_vld_in();
    void thread_wave_in_V_0_vld_out();
    void thread_wave_in_V_TDATA_blk_n();
    void thread_wave_in_V_TREADY();
    void thread_wave_out_V_1_ack_in();
    void thread_wave_out_V_1_ack_out();
    void thread_wave_out_V_1_data_out();
    void thread_wave_out_V_1_load_A();
    void thread_wave_out_V_1_load_B();
    void thread_wave_out_V_1_sel();
    void thread_wave_out_V_1_state_cmp_full();
    void thread_wave_out_V_1_vld_in();
    void thread_wave_out_V_1_vld_out();
    void thread_wave_out_V_TDATA();
    void thread_wave_out_V_TDATA_blk_n();
    void thread_wave_out_V_TVALID();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
